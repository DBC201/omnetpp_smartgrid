<#noparse>

<#-- STRING MANIPULATION -->

<#-- String manipulation: both FreeMarker's builtins (?op) and the Apache 
     StringUtils Java class are available; for documentation on the latter, see 
     http://commons.apache.org/lang//api-2.4/org/apache/commons/lang/StringUtils.html
-->

<#assign txt = "This is a short test sentence. "/>
<#assign txt2 = "This is a \n multi-line text,\n but not a very long one.\n"/>
<#assign txt3 = ",1,2,, 4,,,7,8, 9,,"/>

Test strings:
[[${txt}]]

[[${txt2}]]

[[${txt3}]]

<#-- basics -->
length: ${txt?length}
substring/1: ${txt?substring(1,3)}
substring/2: ${txt?substring(20)}
capitalize:  ${txt?capitalize}
upper_case:  ${txt?upper_case}
replace:     ${txt?replace(" ", "-")}
trim: [[${"   \tsome text \n "?trim}]]

index_of:      ${txt?index_of("is")}
last_index_of: ${txt?last_index_of("s")}

starts_with: <#if txt?starts_with("This")>OK</#if>
ends_with:   <#if txt?trim?ends_with("ce.")>OK</#if>
contains:    <#if txt?contains("short")>OK</#if>

number:      ${"3.1415"?number * 2.0}

<#-- splitting up the text -->
<#list txt?split(" ") as word>"${word}"  </#list> 
<#list txt2?split("\n") as line>"${line}"  </#list> 

<#-- regex: listing the matches -->
<#assign res = "aa/rx; ab/r;"?matches("(\\w[^/]+)/([^;]+);")>
<#list res as m>
- ${m} is ${m?groups[1]} per ${m?groups[2]}
</#list>  

<#-- with ?replace, "r" flag enables regex -->
${txt2?replace(' *\n *', '<br>', 'r')}  

<#-- some StringUtils examples -->
substringBefore:     ${StringUtils.substringBefore(txt, "short")}
substringAfter:      ${StringUtils.substringAfter(txt, "short")}
substringBeforeLast: ${StringUtils.substringBeforeLast(txt, "t")}
substringAfterLast:  ${StringUtils.substringAfterLast(txt, "t")}

splitPreserveAllTokens: <#list StringUtils.splitPreserveAllTokens(txt3, ",") as item>"${item}"  </#list> 

</#noparse>
